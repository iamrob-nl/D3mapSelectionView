// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testsuite.proxies;

public class Verzorger
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject verzorgerMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestSuite.Verzorger";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		name("name"),
		jobtitle("jobtitle"),
		address("address"),
		contact("contact"),
		Verzorger_Pacient("TestSuite.Verzorger_Pacient");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Verzorger(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestSuite.Verzorger"));
	}

	protected Verzorger(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject verzorgerMendixObject)
	{
		if (verzorgerMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestSuite.Verzorger", verzorgerMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestSuite.Verzorger");

		this.verzorgerMendixObject = verzorgerMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Verzorger.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testsuite.proxies.Verzorger initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testsuite.proxies.Verzorger.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testsuite.proxies.Verzorger initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testsuite.proxies.Verzorger(context, mendixObject);
	}

	public static testsuite.proxies.Verzorger load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testsuite.proxies.Verzorger.initialize(context, mendixObject);
	}

	public static java.util.List<testsuite.proxies.Verzorger> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testsuite.proxies.Verzorger> result = new java.util.ArrayList<testsuite.proxies.Verzorger>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestSuite.Verzorger" + xpathConstraint))
			result.add(testsuite.proxies.Verzorger.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of name
	 */
	public final java.lang.String getname()
	{
		return getname(getContext());
	}

	/**
	 * @param context
	 * @return value of name
	 */
	public final java.lang.String getname(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.name.toString());
	}

	/**
	 * Set value of name
	 * @param name
	 */
	public final void setname(java.lang.String name)
	{
		setname(getContext(), name);
	}

	/**
	 * Set value of name
	 * @param context
	 * @param name
	 */
	public final void setname(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.name.toString(), name);
	}

	/**
	 * @return value of jobtitle
	 */
	public final java.lang.String getjobtitle()
	{
		return getjobtitle(getContext());
	}

	/**
	 * @param context
	 * @return value of jobtitle
	 */
	public final java.lang.String getjobtitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.jobtitle.toString());
	}

	/**
	 * Set value of jobtitle
	 * @param jobtitle
	 */
	public final void setjobtitle(java.lang.String jobtitle)
	{
		setjobtitle(getContext(), jobtitle);
	}

	/**
	 * Set value of jobtitle
	 * @param context
	 * @param jobtitle
	 */
	public final void setjobtitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String jobtitle)
	{
		getMendixObject().setValue(context, MemberNames.jobtitle.toString(), jobtitle);
	}

	/**
	 * @return value of address
	 */
	public final java.lang.String getaddress()
	{
		return getaddress(getContext());
	}

	/**
	 * @param context
	 * @return value of address
	 */
	public final java.lang.String getaddress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.address.toString());
	}

	/**
	 * Set value of address
	 * @param address
	 */
	public final void setaddress(java.lang.String address)
	{
		setaddress(getContext(), address);
	}

	/**
	 * Set value of address
	 * @param context
	 * @param address
	 */
	public final void setaddress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String address)
	{
		getMendixObject().setValue(context, MemberNames.address.toString(), address);
	}

	/**
	 * @return value of contact
	 */
	public final java.lang.String getcontact()
	{
		return getcontact(getContext());
	}

	/**
	 * @param context
	 * @return value of contact
	 */
	public final java.lang.String getcontact(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.contact.toString());
	}

	/**
	 * Set value of contact
	 * @param contact
	 */
	public final void setcontact(java.lang.String contact)
	{
		setcontact(getContext(), contact);
	}

	/**
	 * Set value of contact
	 * @param context
	 * @param contact
	 */
	public final void setcontact(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String contact)
	{
		getMendixObject().setValue(context, MemberNames.contact.toString(), contact);
	}

	/**
	 * @return value of Verzorger_Pacient
	 */
	public final testsuite.proxies.Pacient getVerzorger_Pacient() throws com.mendix.core.CoreException
	{
		return getVerzorger_Pacient(getContext());
	}

	/**
	 * @param context
	 * @return value of Verzorger_Pacient
	 */
	public final testsuite.proxies.Pacient getVerzorger_Pacient(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testsuite.proxies.Pacient result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Verzorger_Pacient.toString());
		if (identifier != null)
			result = testsuite.proxies.Pacient.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Verzorger_Pacient
	 * @param verzorger_pacient
	 */
	public final void setVerzorger_Pacient(testsuite.proxies.Pacient verzorger_pacient)
	{
		setVerzorger_Pacient(getContext(), verzorger_pacient);
	}

	/**
	 * Set value of Verzorger_Pacient
	 * @param context
	 * @param verzorger_pacient
	 */
	public final void setVerzorger_Pacient(com.mendix.systemwideinterfaces.core.IContext context, testsuite.proxies.Pacient verzorger_pacient)
	{
		if (verzorger_pacient == null)
			getMendixObject().setValue(context, MemberNames.Verzorger_Pacient.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Verzorger_Pacient.toString(), verzorger_pacient.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return verzorgerMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testsuite.proxies.Verzorger that = (testsuite.proxies.Verzorger) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestSuite.Verzorger";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
